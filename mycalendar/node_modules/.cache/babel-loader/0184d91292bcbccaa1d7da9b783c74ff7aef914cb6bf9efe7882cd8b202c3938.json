{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dah03\\\\calendar\\\\mycalendar\\\\src\\\\components\\\\App\\\\Calendar\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\n// Calendar.jsx\nimport { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Calendar({\n  events = [],\n  selectedTeamMember,\n  setSelectedSlot,\n  setShowBookingForm\n}) {\n  _s();\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  // Generate time slots for a given date\n  const generateTimeSlots = date => {\n    const startHour = 9;\n    const endHour = 17;\n    const slots = [];\n    for (let hour = startHour; hour < endHour; hour++) {\n      const start = new Date(date);\n      start.setHours(hour, 0, 0, 0);\n      const end = new Date(date);\n      end.setHours(hour + 1, 0, 0, 0);\n      slots.push({\n        start,\n        end\n      });\n    }\n    return slots;\n  };\n\n  // Update slots whenever date or events change\n  useEffect(() => {\n    if (!selectedDate) return;\n    const slots = generateTimeSlots(selectedDate);\n    const updatedSlots = slots.map(slot => {\n      const conflict = events.some(event => new Date(event.start) < slot.end && new Date(event.end) > slot.start);\n      return {\n        ...slot,\n        conflict\n      };\n    });\n    setAvailableSlots(updatedSlots);\n  }, [selectedDate, events]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini-calendar\",\n          children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n            plugins: [dayGridPlugin, interactionPlugin],\n            initialView: \"dayGridMonth\",\n            events: events,\n            height: \"auto\",\n            selectable: true,\n            dateClick: info => setSelectedDate(new Date(info.dateStr))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slots\",\n          children: !selectedTeamMember ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"#888\",\n              fontStyle: \"italic\"\n            },\n            children: \"Please select a staff member to see available slots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this) : availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `time-slot-btn ${slot.conflict ? \"unavailable\" : \"available\"}`,\n            disabled: slot.conflict,\n            onClick: () => {\n              if (slot.conflict) return;\n              setSelectedSlot({\n                start: slot.start.toISOString(),\n                end: slot.end.toISOString()\n              });\n              setShowBookingForm(true);\n            },\n            children: [slot.start.toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\"\n            }), \" \", \"-\", \" \", slot.end.toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\"\n            }), slot.conflict && \" (Booked)\"]\n          }, slot.start.toISOString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"FAkt1pFSdKv3uNj2RBfQxfOBvqw=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","Calendar","events","selectedTeamMember","setSelectedSlot","setShowBookingForm","_s","availableSlots","setAvailableSlots","selectedDate","setSelectedDate","Date","generateTimeSlots","date","startHour","endHour","slots","hour","start","setHours","end","push","updatedSlots","map","slot","conflict","some","event","className","children","plugins","initialView","height","selectable","dateClick","info","dateStr","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontStyle","disabled","onClick","toISOString","toLocaleTimeString","minute","_c","$RefreshReg$"],"sources":["C:/Users/dah03/calendar/mycalendar/src/components/App/Calendar/Calendar.jsx"],"sourcesContent":["// Calendar.jsx\r\nimport { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport \"./Calendar.css\";\r\n\r\nexport default function Calendar({\r\n  events = [],\r\n  selectedTeamMember,\r\n  setSelectedSlot,\r\n  setShowBookingForm,\r\n}) {\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  // Generate time slots for a given date\r\n  const generateTimeSlots = (date) => {\r\n    const startHour = 9;\r\n    const endHour = 17;\r\n    const slots = [];\r\n\r\n    for (let hour = startHour; hour < endHour; hour++) {\r\n      const start = new Date(date);\r\n      start.setHours(hour, 0, 0, 0);\r\n      const end = new Date(date);\r\n      end.setHours(hour + 1, 0, 0, 0);\r\n\r\n      slots.push({ start, end });\r\n    }\r\n    return slots;\r\n  };\r\n\r\n  // Update slots whenever date or events change\r\n  useEffect(() => {\r\n    if (!selectedDate) return;\r\n\r\n    const slots = generateTimeSlots(selectedDate);\r\n\r\n    const updatedSlots = slots.map((slot) => {\r\n      const conflict = events.some(\r\n        (event) =>\r\n          new Date(event.start) < slot.end && new Date(event.end) > slot.start\r\n      );\r\n      return { ...slot, conflict };\r\n    });\r\n\r\n    setAvailableSlots(updatedSlots);\r\n  }, [selectedDate, events]);\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      {/* Left side: mini calendar + slots */}\r\n      <div className=\"calendar-left\">\r\n        <div className=\"calendar-sidebar\">\r\n          {/* Mini calendar */}\r\n          <div className=\"mini-calendar\">\r\n            <FullCalendar\r\n              plugins={[dayGridPlugin, interactionPlugin]}\r\n              initialView=\"dayGridMonth\"\r\n              events={events}\r\n              height=\"auto\"\r\n              selectable={true}\r\n              dateClick={(info) => setSelectedDate(new Date(info.dateStr))}\r\n            />\r\n          </div>\r\n\r\n          {/* Time slots */}\r\n          <div className=\"time-slots\">\r\n            {!selectedTeamMember ? (\r\n              <p style={{ color: \"#888\", fontStyle: \"italic\" }}>\r\n                Please select a staff member to see available slots\r\n              </p>\r\n            ) : (\r\n              availableSlots.map((slot) => (\r\n                <button\r\n                  key={slot.start.toISOString()}\r\n                  className={`time-slot-btn ${\r\n                    slot.conflict ? \"unavailable\" : \"available\"\r\n                  }`}\r\n                  disabled={slot.conflict}\r\n                  onClick={() => {\r\n                    if (slot.conflict) return;\r\n                    setSelectedSlot({\r\n                      start: slot.start.toISOString(),\r\n                      end: slot.end.toISOString(),\r\n                    });\r\n                    setShowBookingForm(true);\r\n                  }}\r\n                >\r\n                  {slot.start.toLocaleTimeString([], {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                  })}{\" \"}\r\n                  -{\" \"}\r\n                  {slot.end.toLocaleTimeString([], {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                  })}\r\n                  {slot.conflict && \" (Booked)\"}\r\n                </button>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right side (BookingForm goes here) */}\r\n      <div className=\"calendar-right\">{/* BookingForm will render here */}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}