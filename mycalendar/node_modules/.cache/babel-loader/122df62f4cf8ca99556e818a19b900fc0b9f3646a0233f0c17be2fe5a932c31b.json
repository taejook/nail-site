{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dah03\\\\calendar\\\\mycalendar\\\\src\\\\components\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Fullcalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Calendar() {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    async function loadData() {\n      const [locRes, teamRes, serviceRes] = await Promise.all([fetch(\"http://localhost:4000/api/locations\").then(r => r.json()), fetch(\"http://localhost:4000/api/team-members\").then(r => r.json()), fetch(\"http://localhost:4000/api/services\").then(r => r.json())]);\n      console.log(\"Locations:\", locRes);\n      console.log(\"Team Members:\", teamRes);\n      console.log(\"Services:\", serviceRes);\n    }\n    loadData();\n  }, []);\n\n  // Fetch bookings from backend\n  useEffect(() => {\n    fetch(\"http://localhost:4000/api/bookings\").then(res => res.json()).then(data => {\n      if (data.bookings) {\n        const mapped = data.bookings.map(b => {\n          var _b$customer;\n          return {\n            id: b.id,\n            title: ((_b$customer = b.customer) === null || _b$customer === void 0 ? void 0 : _b$customer.display_name) || \"Booking\",\n            start: b.start_at,\n            end: b.end_at\n          };\n        });\n        setEvents(mapped);\n      }\n    });\n  }, []);\n\n  // Handle slot selection → create booking\n  const handleDateSelect = selectInfo => {\n    const customerId = prompt(\"Enter Customer ID:\");\n    if (!customerId) return;\n    fetch(\"http://localhost:4000/api/bookings\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        booking: {\n          customer_id: customerId,\n          location_id: \"YOUR_LOCATION_ID\",\n          start_at: selectInfo.startStr,\n          appointment_segments: [{\n            team_member_id: \"SELECTED_TEAM_MEMBER_ID\",\n            service_variation_id: \"SELECTED_SERVICE_ID\",\n            service_variation_version: 1599775456731\n          }]\n        }\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(\"Created booking response:\", data);\n      if (data.booking) {\n        setEvents(prev => {\n          var _data$booking$custome;\n          return [...prev, {\n            id: data.booking.id,\n            title: ((_data$booking$custome = data.booking.customer) === null || _data$booking$custome === void 0 ? void 0 : _data$booking$custome.display_name) || \"Booking\",\n            start: data.booking.start_at,\n            end: data.booking.end_at\n          }];\n        });\n      } else {\n        var _data$errors, _data$errors$;\n        alert(\"Booking failed: \" + (((_data$errors = data.errors) === null || _data$errors === void 0 ? void 0 : (_data$errors$ = _data$errors[0]) === null || _data$errors$ === void 0 ? void 0 : _data$errors$.detail) || \"Unknown error\"));\n      }\n    }).catch(err => {\n      console.error(\"Create booking error:\", err);\n      alert(\"Error creating booking — check console.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Fullcalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"timeGridWeek\",\n      selectable: true,\n      events: events,\n      select: handleDateSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"PyI8rXVa6+tWe4bLHczC4yXu/tw=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","Fullcalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","Calendar","_s","events","setEvents","loadData","locRes","teamRes","serviceRes","Promise","all","fetch","then","r","json","console","log","res","data","bookings","mapped","map","b","_b$customer","id","title","customer","display_name","start","start_at","end","end_at","handleDateSelect","selectInfo","customerId","prompt","method","headers","body","JSON","stringify","booking","customer_id","location_id","startStr","appointment_segments","team_member_id","service_variation_id","service_variation_version","prev","_data$booking$custome","_data$errors","_data$errors$","alert","errors","detail","catch","err","error","style","padding","children","plugins","initialView","selectable","select","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dah03/calendar/mycalendar/src/components/Calendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Fullcalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nexport default function Calendar() {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      const [locRes, teamRes, serviceRes] = await Promise.all([\r\n        fetch(\"http://localhost:4000/api/locations\").then((r) => r.json()),\r\n        fetch(\"http://localhost:4000/api/team-members\").then((r) => r.json()),\r\n        fetch(\"http://localhost:4000/api/services\").then((r) => r.json()),\r\n      ]);\r\n\r\n      console.log(\"Locations:\", locRes);\r\n      console.log(\"Team Members:\", teamRes);\r\n      console.log(\"Services:\", serviceRes);\r\n    }\r\n    loadData();\r\n  }, []);\r\n\r\n  // Fetch bookings from backend\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/api/bookings\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.bookings) {\r\n          const mapped = data.bookings.map((b) => ({\r\n            id: b.id,\r\n            title: b.customer?.display_name || \"Booking\",\r\n            start: b.start_at,\r\n            end: b.end_at,\r\n          }));\r\n          setEvents(mapped);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  // Handle slot selection → create booking\r\n  const handleDateSelect = (selectInfo) => {\r\n    const customerId = prompt(\"Enter Customer ID:\");\r\n    if (!customerId) return;\r\n\r\n    fetch(\"http://localhost:4000/api/bookings\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        booking: {\r\n          customer_id: customerId,\r\n          location_id: \"YOUR_LOCATION_ID\",\r\n          start_at: selectInfo.startStr,\r\n          appointment_segments: [\r\n            {\r\n              team_member_id: \"SELECTED_TEAM_MEMBER_ID\",\r\n              service_variation_id: \"SELECTED_SERVICE_ID\",\r\n              service_variation_version: 1599775456731,\r\n            },\r\n          ],\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"Created booking response:\", data);\r\n        if (data.booking) {\r\n          setEvents((prev) => [\r\n            ...prev,\r\n            {\r\n              id: data.booking.id,\r\n              title: data.booking.customer?.display_name || \"Booking\",\r\n              start: data.booking.start_at,\r\n              end: data.booking.end_at,\r\n            },\r\n          ]);\r\n        } else {\r\n          alert(\r\n            \"Booking failed: \" + (data.errors?.[0]?.detail || \"Unknown error\")\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Create booking error:\", err);\r\n        alert(\"Error creating booking — check console.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <Fullcalendar\r\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n        initialView=\"timeGridWeek\"\r\n        selectable={true}\r\n        events={events}\r\n        select={handleDateSelect}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}