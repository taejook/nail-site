{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dah03\\\\calendar\\\\mycalendar\\\\src\\\\components\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Calendar() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [services, setServices] = useState([]);\n  const [showBookingForm, setShowBookingForm] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [customerId, setCustomerId] = useState(\"\");\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\n  const [selectedTeamMember, setSelectedTeamMember] = useState(\"\");\n  const [selectedService, setSelectedService] = useState(\"\");\n\n  // Sidebar state\n  const [sidebarDay, setSidebarDay] = useState(new Date());\n  const [availableSlots, setAvailableSlots] = useState([]);\n\n  // Load backend data\n  useEffect(() => {\n    async function loadData() {\n      try {\n        var _teamRes$team_members, _serviceRes$objects;\n        const [locRes, teamRes, serviceRes, bookingRes] = await Promise.all([fetch(\"http://localhost:4000/api/locations\").then(r => r.json()), fetch(\"http://localhost:4000/api/team-members\").then(r => r.json()), fetch(\"http://localhost:4000/api/services\").then(r => r.json()), fetch(\"http://localhost:4000/api/bookings\").then(r => r.json())]);\n        setLocations(Array.isArray(locRes) ? locRes : []);\n\n        // Team members\n        if (teamRes !== null && teamRes !== void 0 && (_teamRes$team_members = teamRes.team_members) !== null && _teamRes$team_members !== void 0 && _teamRes$team_members.length) {\n          setTeamMembers(teamRes.team_members);\n        } else {\n          setTeamMembers([{\n            id: \"test1\",\n            team_member_details: {\n              given_name: \"John\",\n              family_name: \"Doe\"\n            }\n          }, {\n            id: \"test2\",\n            team_member_details: {\n              given_name: \"Jane\",\n              family_name: \"Smith\"\n            }\n          }]);\n        }\n\n        // Services\n        if (serviceRes !== null && serviceRes !== void 0 && (_serviceRes$objects = serviceRes.objects) !== null && _serviceRes$objects !== void 0 && _serviceRes$objects.length) {\n          setServices(serviceRes.objects);\n        } else {\n          setServices([{\n            id: \"srv1\",\n            item_data: {\n              name: \"Haircut\"\n            }\n          }, {\n            id: \"srv2\",\n            item_data: {\n              name: \"Massage\"\n            }\n          }]);\n        }\n\n        // Bookings\n        if (Array.isArray(bookingRes)) {\n          setEvents(bookingRes.map(b => {\n            var _b$customer;\n            return {\n              id: b.id,\n              title: ((_b$customer = b.customer) === null || _b$customer === void 0 ? void 0 : _b$customer.display_name) || \"Booking\",\n              start: b.start_at,\n              end: b.end_at,\n              team_member_id: b.team_member_id || null\n            };\n          }));\n        }\n      } catch (err) {\n        console.error(\"Failed to load data:\", err);\n        alert(\"Error loading data — check console\");\n      }\n    }\n    loadData();\n  }, []);\n\n  // Compute available slots for sidebar\n  useEffect(() => {\n    if (!selectedTeamMember) {\n      setAvailableSlots([]);\n      return;\n    }\n    const slots = [];\n    const startHour = 9;\n    const endHour = 17;\n    for (let hour = startHour; hour < endHour; hour++) {\n      const start = new Date(sidebarDay);\n      start.setHours(hour, 0, 0, 0);\n      const end = new Date(sidebarDay);\n      end.setHours(hour + 1, 0, 0, 0);\n      const conflict = events.some(e => e.team_member_id === selectedTeamMember && new Date(e.start) < end && new Date(e.end) > start);\n      if (!conflict) slots.push({\n        start,\n        end\n      });\n    }\n    setAvailableSlots(slots);\n  }, [events, sidebarDay, selectedTeamMember]);\n\n  // Handle selecting a time slot on calendar\n  const handleDateSelect = selectInfo => {\n    if (!selectedTeamMember) return alert(\"Please select a staff first!\");\n    setSelectedSlot({\n      start: selectInfo.startStr,\n      end: selectInfo.endStr\n    });\n    setShowBookingForm(true);\n  };\n\n  // Create booking\n  const createBooking = async () => {\n    if (!customerId || !selectedLocation || !selectedTeamMember || !selectedService) {\n      return alert(\"Please fill all fields!\");\n    }\n    const payload = {\n      booking: {\n        customer_id: customerId,\n        location_id: selectedLocation,\n        start_at: selectedSlot.start,\n        appointment_segments: [{\n          team_member_id: selectedTeamMember,\n          service_variation_id: selectedService,\n          service_variation_version: 1\n        }]\n      }\n    };\n    try {\n      const res = await fetch(\"http://localhost:4000/api/bookings\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await res.json();\n      if (data.id) {\n        // Add new booking to events\n        setEvents(prev => {\n          var _data$customer;\n          return [...prev, {\n            id: data.id,\n            title: ((_data$customer = data.customer) === null || _data$customer === void 0 ? void 0 : _data$customer.display_name) || \"Booking\",\n            start: data.start_at,\n            end: data.end_at,\n            team_member_id: selectedTeamMember\n          }];\n        });\n\n        // Reset form\n        setShowBookingForm(false);\n        setCustomerId(\"\");\n        setSelectedLocation(\"\");\n        setSelectedTeamMember(\"\");\n        setSelectedService(\"\");\n        setSelectedSlot(null);\n        alert(\"Booking created ✅\");\n      } else {\n        console.error(data);\n        alert(\"Failed to create booking — check console\");\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Error creating booking — check console\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"200px\",\n        marginRight: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Available Times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Day:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: sidebarDay.toISOString().substring(0, 10),\n          onChange: e => setSidebarDay(new Date(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: \"block\",\n          marginTop: \"10px\"\n        },\n        children: [\"Select Staff:\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedTeamMember,\n          onChange: e => setSelectedTeamMember(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Staff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), teamMembers.map(tm => {\n            var _tm$team_member_detai;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tm.id,\n              children: ((_tm$team_member_detai = tm.team_member_details) === null || _tm$team_member_detai === void 0 ? void 0 : _tm$team_member_detai.given_name) || tm.id\n            }, tm.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), availableSlots.length ? availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          display: \"block\",\n          width: \"100%\",\n          marginBottom: \"5px\",\n          padding: \"5px\"\n        },\n        onClick: () => {\n          setSelectedSlot({\n            start: slot.start.toISOString(),\n            end: slot.end.toISOString()\n          });\n          setShowBookingForm(true);\n        },\n        children: [slot.start.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        }), \" -\", \" \", slot.end.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        })]\n      }, slot.start.toISOString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No available slots for selected staff/day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [showBookingForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          marginBottom: \"20px\",\n          borderRadius: \"6px\",\n          backgroundColor: \"#f9f9f9\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            margin: \"5px 0\"\n          },\n          children: [\"Customer ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: customerId,\n            onChange: e => setCustomerId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            margin: \"5px 0\"\n          },\n          children: [\"Location:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedLocation,\n            onChange: e => setSelectedLocation(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), locations.map(loc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: loc.id,\n              children: loc.name\n            }, loc.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            margin: \"5px 0\"\n          },\n          children: [\"Staff:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTeamMember,\n            onChange: e => setSelectedTeamMember(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Staff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), teamMembers.map(tm => {\n              var _tm$team_member_detai2;\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: tm.id,\n                children: ((_tm$team_member_detai2 = tm.team_member_details) === null || _tm$team_member_detai2 === void 0 ? void 0 : _tm$team_member_detai2.given_name) || tm.id\n              }, tm.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"block\",\n            margin: \"5px 0\"\n          },\n          children: [\"Service:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedService,\n            onChange: e => setSelectedService(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), services.map(s => {\n              var _s$item_data;\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: s.id,\n                children: ((_s$item_data = s.item_data) === null || _s$item_data === void 0 ? void 0 : _s$item_data.name) || s.id\n              }, s.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createBooking,\n          style: {\n            marginRight: \"10px\"\n          },\n          children: \"Create Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowBookingForm(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"timeGridWeek\",\n        selectable: true,\n        events: events,\n        select: handleDateSelect,\n        selectAllow: selectInfo => {\n          if (!selectedTeamMember) return false; // require staff selection\n          const start = new Date(selectInfo.start);\n          const end = new Date(selectInfo.end);\n          return !events.some(e => e.team_member_id === selectedTeamMember && new Date(e.start) < end && new Date(e.end) > start);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"rWxmNoxAVgKuij+82zcLkKgLGQw=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","Calendar","_s","events","setEvents","locations","setLocations","teamMembers","setTeamMembers","services","setServices","showBookingForm","setShowBookingForm","selectedSlot","setSelectedSlot","customerId","setCustomerId","selectedLocation","setSelectedLocation","selectedTeamMember","setSelectedTeamMember","selectedService","setSelectedService","sidebarDay","setSidebarDay","Date","availableSlots","setAvailableSlots","loadData","_teamRes$team_members","_serviceRes$objects","locRes","teamRes","serviceRes","bookingRes","Promise","all","fetch","then","r","json","Array","isArray","team_members","length","id","team_member_details","given_name","family_name","objects","item_data","name","map","b","_b$customer","title","customer","display_name","start","start_at","end","end_at","team_member_id","err","console","error","alert","slots","startHour","endHour","hour","setHours","conflict","some","e","push","handleDateSelect","selectInfo","startStr","endStr","createBooking","payload","booking","customer_id","location_id","appointment_segments","service_variation_id","service_variation_version","res","method","headers","body","JSON","stringify","data","prev","_data$customer","style","display","padding","children","width","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","type","value","toISOString","substring","onChange","target","marginTop","tm","_tm$team_member_detai","slot","marginBottom","onClick","toLocaleTimeString","minute","flex","border","borderRadius","backgroundColor","margin","loc","_tm$team_member_detai2","s","_s$item_data","plugins","initialView","selectable","select","selectAllow","_c","$RefreshReg$"],"sources":["C:/Users/dah03/calendar/mycalendar/src/components/Calendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nexport default function Calendar() {\r\n  const [events, setEvents] = useState([]);\r\n  const [locations, setLocations] = useState([]);\r\n  const [teamMembers, setTeamMembers] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const [showBookingForm, setShowBookingForm] = useState(false);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [customerId, setCustomerId] = useState(\"\");\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n  const [selectedTeamMember, setSelectedTeamMember] = useState(\"\");\r\n  const [selectedService, setSelectedService] = useState(\"\");\r\n\r\n  // Sidebar state\r\n  const [sidebarDay, setSidebarDay] = useState(new Date());\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n\r\n  // Load backend data\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      try {\r\n        const [locRes, teamRes, serviceRes, bookingRes] = await Promise.all([\r\n          fetch(\"http://localhost:4000/api/locations\").then((r) => r.json()),\r\n          fetch(\"http://localhost:4000/api/team-members\").then((r) => r.json()),\r\n          fetch(\"http://localhost:4000/api/services\").then((r) => r.json()),\r\n          fetch(\"http://localhost:4000/api/bookings\").then((r) => r.json()),\r\n        ]);\r\n\r\n        setLocations(Array.isArray(locRes) ? locRes : []);\r\n\r\n        // Team members\r\n        if (teamRes?.team_members?.length) {\r\n          setTeamMembers(teamRes.team_members);\r\n        } else {\r\n          setTeamMembers([\r\n            { id: \"test1\", team_member_details: { given_name: \"John\", family_name: \"Doe\" } },\r\n            { id: \"test2\", team_member_details: { given_name: \"Jane\", family_name: \"Smith\" } },\r\n          ]);\r\n        }\r\n\r\n        // Services\r\n        if (serviceRes?.objects?.length) {\r\n          setServices(serviceRes.objects);\r\n        } else {\r\n          setServices([\r\n            { id: \"srv1\", item_data: { name: \"Haircut\" } },\r\n            { id: \"srv2\", item_data: { name: \"Massage\" } },\r\n          ]);\r\n        }\r\n\r\n        // Bookings\r\n        if (Array.isArray(bookingRes)) {\r\n          setEvents(\r\n            bookingRes.map((b) => ({\r\n              id: b.id,\r\n              title: b.customer?.display_name || \"Booking\",\r\n              start: b.start_at,\r\n              end: b.end_at,\r\n              team_member_id: b.team_member_id || null,\r\n            }))\r\n          );\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to load data:\", err);\r\n        alert(\"Error loading data — check console\");\r\n      }\r\n    }\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  // Compute available slots for sidebar\r\n  useEffect(() => {\r\n    if (!selectedTeamMember) {\r\n      setAvailableSlots([]);\r\n      return;\r\n    }\r\n\r\n    const slots = [];\r\n    const startHour = 9;\r\n    const endHour = 17;\r\n\r\n    for (let hour = startHour; hour < endHour; hour++) {\r\n      const start = new Date(sidebarDay);\r\n      start.setHours(hour, 0, 0, 0);\r\n      const end = new Date(sidebarDay);\r\n      end.setHours(hour + 1, 0, 0, 0);\r\n\r\n      const conflict = events.some(\r\n        (e) =>\r\n          e.team_member_id === selectedTeamMember &&\r\n          new Date(e.start) < end &&\r\n          new Date(e.end) > start\r\n      );\r\n\r\n      if (!conflict) slots.push({ start, end });\r\n    }\r\n\r\n    setAvailableSlots(slots);\r\n  }, [events, sidebarDay, selectedTeamMember]);\r\n\r\n  // Handle selecting a time slot on calendar\r\n  const handleDateSelect = (selectInfo) => {\r\n    if (!selectedTeamMember) return alert(\"Please select a staff first!\");\r\n    setSelectedSlot({ start: selectInfo.startStr, end: selectInfo.endStr });\r\n    setShowBookingForm(true);\r\n  };\r\n\r\n  // Create booking\r\n  const createBooking = async () => {\r\n    if (!customerId || !selectedLocation || !selectedTeamMember || !selectedService) {\r\n      return alert(\"Please fill all fields!\");\r\n    }\r\n\r\n    const payload = {\r\n      booking: {\r\n        customer_id: customerId,\r\n        location_id: selectedLocation,\r\n        start_at: selectedSlot.start,\r\n        appointment_segments: [\r\n          {\r\n            team_member_id: selectedTeamMember,\r\n            service_variation_id: selectedService,\r\n            service_variation_version: 1,\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:4000/api/bookings\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const data = await res.json();\r\n\r\n      if (data.id) {\r\n        // Add new booking to events\r\n        setEvents((prev) => [\r\n          ...prev,\r\n          {\r\n            id: data.id,\r\n            title: data.customer?.display_name || \"Booking\",\r\n            start: data.start_at,\r\n            end: data.end_at,\r\n            team_member_id: selectedTeamMember,\r\n          },\r\n        ]);\r\n\r\n        // Reset form\r\n        setShowBookingForm(false);\r\n        setCustomerId(\"\");\r\n        setSelectedLocation(\"\");\r\n        setSelectedTeamMember(\"\");\r\n        setSelectedService(\"\");\r\n        setSelectedSlot(null);\r\n\r\n        alert(\"Booking created ✅\");\r\n      } else {\r\n        console.error(data);\r\n        alert(\"Failed to create booking — check console\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error creating booking — check console\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", padding: \"20px\" }}>\r\n      {/* Sidebar for available times */}\r\n      <div style={{ width: \"200px\", marginRight: \"20px\" }}>\r\n        <h4>Available Times</h4>\r\n\r\n        <label>\r\n          Select Day:{\" \"}\r\n          <input\r\n            type=\"date\"\r\n            value={sidebarDay.toISOString().substring(0, 10)}\r\n            onChange={(e) => setSidebarDay(new Date(e.target.value))}\r\n          />\r\n        </label>\r\n\r\n        <label style={{ display: \"block\", marginTop: \"10px\" }}>\r\n          Select Staff:{\" \"}\r\n          <select\r\n            value={selectedTeamMember}\r\n            onChange={(e) => setSelectedTeamMember(e.target.value)}\r\n          >\r\n            <option value=\"\">Select Staff</option>\r\n            {teamMembers.map((tm) => (\r\n              <option key={tm.id} value={tm.id}>\r\n                {tm.team_member_details?.given_name || tm.id}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n\r\n        {availableSlots.length ? (\r\n          availableSlots.map((slot) => (\r\n            <button\r\n              key={slot.start.toISOString()}\r\n              style={{\r\n                display: \"block\",\r\n                width: \"100%\",\r\n                marginBottom: \"5px\",\r\n                padding: \"5px\",\r\n              }}\r\n              onClick={() => {\r\n                setSelectedSlot({\r\n                  start: slot.start.toISOString(),\r\n                  end: slot.end.toISOString(),\r\n                });\r\n                setShowBookingForm(true);\r\n              }}\r\n            >\r\n              {slot.start.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })} -{\" \"}\r\n              {slot.end.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}\r\n            </button>\r\n          ))\r\n        ) : (\r\n          <p>No available slots for selected staff/day</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Main calendar */}\r\n      <div style={{ flex: 1 }}>\r\n        {showBookingForm && (\r\n          <div\r\n            style={{\r\n              border: \"1px solid #ccc\",\r\n              padding: \"10px\",\r\n              marginBottom: \"20px\",\r\n              borderRadius: \"6px\",\r\n              backgroundColor: \"#f9f9f9\",\r\n            }}\r\n          >\r\n            <h3>Create Booking</h3>\r\n\r\n            <label style={{ display: \"block\", margin: \"5px 0\" }}>\r\n              Customer ID:\r\n              <input\r\n                type=\"text\"\r\n                value={customerId}\r\n                onChange={(e) => setCustomerId(e.target.value)}\r\n              />\r\n            </label>\r\n\r\n            <label style={{ display: \"block\", margin: \"5px 0\" }}>\r\n              Location:\r\n              <select\r\n                value={selectedLocation}\r\n                onChange={(e) => setSelectedLocation(e.target.value)}\r\n              >\r\n                <option value=\"\">Select Location</option>\r\n                {locations.map((loc) => (\r\n                  <option key={loc.id} value={loc.id}>\r\n                    {loc.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n\r\n            <label style={{ display: \"block\", margin: \"5px 0\" }}>\r\n              Staff:\r\n              <select\r\n                value={selectedTeamMember}\r\n                onChange={(e) => setSelectedTeamMember(e.target.value)}\r\n              >\r\n                <option value=\"\">Select Staff</option>\r\n                {teamMembers.map((tm) => (\r\n                  <option key={tm.id} value={tm.id}>\r\n                    {tm.team_member_details?.given_name || tm.id}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n\r\n            <label style={{ display: \"block\", margin: \"5px 0\" }}>\r\n              Service:\r\n              <select\r\n                value={selectedService}\r\n                onChange={(e) => setSelectedService(e.target.value)}\r\n              >\r\n                <option value=\"\">Select Service</option>\r\n                {services.map((s) => (\r\n                  <option key={s.id} value={s.id}>\r\n                    {s.item_data?.name || s.id}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n\r\n            <button onClick={createBooking} style={{ marginRight: \"10px\" }}>\r\n              Create Booking\r\n            </button>\r\n            <button onClick={() => setShowBookingForm(false)}>Cancel</button>\r\n          </div>\r\n        )}\r\n\r\n        <FullCalendar\r\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n          initialView=\"timeGridWeek\"\r\n          selectable={true}\r\n          events={events}\r\n          select={handleDateSelect}\r\n          selectAllow={(selectInfo) => {\r\n            if (!selectedTeamMember) return false; // require staff selection\r\n            const start = new Date(selectInfo.start);\r\n            const end = new Date(selectInfo.end);\r\n\r\n            return !events.some(\r\n              (e) =>\r\n                e.team_member_id === selectedTeamMember &&\r\n                new Date(e.start) < end &&\r\n                new Date(e.end) > start\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}