{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dah03\\\\calendar\\\\mycalendar\\\\src\\\\components\\\\App\\\\Calendar\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport BookingForm from \"./BookingForm/BookingForm\";\nimport \"./Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Calendar() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [services, setServices] = useState([]);\n  const [showBookingForm, setShowBookingForm] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [customerId, setCustomerId] = useState(\"\");\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\n  const [selectedTeamMember, setSelectedTeamMember] = useState(\"\");\n  const [selectedService, setSelectedService] = useState(\"\");\n  const [sidebarDay, setSidebarDay] = useState(new Date());\n  const [availableSlots, setAvailableSlots] = useState([]);\n\n  // load backend data\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const [locRes, teamRes, serviceRes, bookingRes] = await Promise.all([fetch(\"http://localhost:4000/api/locations\").then(r => r.json()), fetch(\"http://localhost:4000/api/team-members\").then(r => r.json()), fetch(\"http://localhost:4000/api/services\").then(r => r.json()), fetch(\"http://localhost:4000/api/bookings\").then(r => r.json())]);\n        setLocations(Array.isArray(locRes) ? locRes : []);\n        setTeamMembers((teamRes === null || teamRes === void 0 ? void 0 : teamRes.team_members) || [{\n          id: \"test1\",\n          team_member_details: {\n            given_name: \"Lucy\",\n            family_name: \"Oh\"\n          }\n        }]);\n        setServices((serviceRes === null || serviceRes === void 0 ? void 0 : serviceRes.objects) || [{\n          id: \"srv1\",\n          item_data: {\n            name: \"Manicure\"\n          }\n        }, {\n          id: \"srv2\",\n          item_data: {\n            name: \"Pedicure\"\n          }\n        }, {\n          id: \"srv3\",\n          item_data: {\n            name: \"Nail Art\"\n          }\n        }, {\n          id: \"srv4\",\n          item_data: {\n            name: \"Gel Nails\"\n          }\n        }, {\n          id: \"srv5\",\n          item_data: {\n            name: \"Acrylic Nails\"\n          }\n        }]);\n        setEvents(Array.isArray(bookingRes) ? bookingRes.map(b => {\n          var _b$customer;\n          return {\n            id: b.id,\n            title: ((_b$customer = b.customer) === null || _b$customer === void 0 ? void 0 : _b$customer.display_name) || \"Booking\",\n            start: b.start_at,\n            end: b.end_at,\n            team_member_id: b.team_member_id || null\n          };\n        }) : []);\n      } catch (err) {\n        console.error(\"Failed to load data:\", err);\n        alert(\"Error loading data — check console\");\n      }\n    }\n    loadData();\n  }, []);\n\n  // available slots sidebar\n  useEffect(() => {\n    if (!selectedTeamMember) {\n      setAvailableSlots([]);\n      return;\n    }\n    const slots = [];\n    for (let hour = 9; hour < 17; hour++) {\n      const start = new Date(sidebarDay);\n      start.setHours(hour, 0, 0, 0);\n      const end = new Date(sidebarDay);\n      end.setHours(hour + 1, 0, 0, 0);\n      const conflict = events.some(e => e.team_member_id === selectedTeamMember && new Date(e.start) < end && new Date(e.end) > start);\n      if (!conflict) slots.push({\n        start,\n        end\n      });\n    }\n    setAvailableSlots(slots);\n  }, [events, sidebarDay, selectedTeamMember]);\n  const handleDateSelect = selectInfo => {\n    const staffConflict = events.some(e => e.team_member_id === selectedTeamMember && new Date(selectInfo.start) < new Date(e.end) && new Date(selectInfo.end) > new Date(e.start));\n    if (staffConflict) {\n      alert(\"This slot is already booked for the selected staff.\");\n      return;\n    }\n    setSelectedSlot({\n      start: selectInfo.startStr,\n      end: selectInfo.endStr\n    });\n    setShowBookingForm(true);\n  };\n  const createBooking = async () => {\n    if (!customerId || !selectedLocation || !selectedTeamMember || !selectedService) {\n      return alert(\"Please fill all fields!\");\n    }\n    const payload = {\n      booking: {\n        customer_id: customerId,\n        location_id: selectedLocation,\n        start_at: selectedSlot.start,\n        end_at: selectedSlot.end,\n        appointment_segments: [{\n          team_member_id: selectedTeamMember,\n          service_variation_id: selectedService,\n          service_variation_version: 1\n        }]\n      }\n    };\n    try {\n      const res = await fetch(\"http://localhost:4000/api/bookings\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (res.status === 409) return alert(\"This time slot is already booked.\");\n      const data = await res.json();\n      if (data.id) {\n        setEvents(prev => {\n          var _data$customer;\n          return [...prev, {\n            id: data.id,\n            title: ((_data$customer = data.customer) === null || _data$customer === void 0 ? void 0 : _data$customer.display_name) || \"Booking\",\n            start: data.start_at,\n            end: data.end_at,\n            team_member_id: selectedTeamMember\n          }];\n        });\n        setShowBookingForm(false);\n        setCustomerId(\"\");\n        setSelectedLocation(\"\");\n        setSelectedTeamMember(\"\");\n        setSelectedService(\"\");\n        setSelectedSlot(null);\n        alert(\"Booking created ✅\");\n      } else {\n        alert(\"Failed to create booking — check console\");\n      }\n    } catch (err) {\n      console.error(err);\n      alert(\"Error creating booking — check console\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booking-calendar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC5 Select Date & Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose your preferred appointment date and available time slot.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-box\",\n          children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n            plugins: [dayGridPlugin, interactionPlugin],\n            initialView: \"dayGridMonth\",\n            selectable: true,\n            events: events,\n            select: handleDateSelect,\n            headerToolbar: {\n              left: \"prev\",\n              center: \"title\",\n              right: \"next\"\n            },\n            height: \"auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), \" Available\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot unavailable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), \" Unavailable\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC5 Select Date & Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose your preferred appointment date and available time slot.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini-calendar\",\n          children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n            plugins: [dayGridPlugin, interactionPlugin],\n            initialView: \"dayGridMonth\",\n            selectable: true,\n            select: info => setSidebarDay(new Date(info.startStr)),\n            headerToolbar: {\n              left: \"prev\",\n              center: \"title\",\n              right: \"next\"\n            },\n            height: \"auto\",\n            dayMaxEvents: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slots\",\n          children: availableSlots.length ? availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"time-slot-btn\",\n            onClick: () => {\n              setSelectedSlot({\n                start: slot.start.toISOString(),\n                end: slot.end.toISOString()\n              });\n              setShowBookingForm(true);\n            },\n            children: [slot.start.toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\"\n            }), \" \", \"-\", \" \", slot.end.toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\"\n            })]\n          }, slot.start.toISOString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 9\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No available slots for this day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 5\n          }, this), \" Available\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot unavailable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 5\n          }, this), \" Unavailable\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-right\",\n      children: showBookingForm && /*#__PURE__*/_jsxDEV(BookingForm, {\n        customerId: customerId,\n        setCustomerId: setCustomerId,\n        selectedLocation: selectedLocation,\n        setSelectedLocation: setSelectedLocation,\n        selectedTeamMember: selectedTeamMember,\n        setSelectedTeamMember: setSelectedTeamMember,\n        selectedService: selectedService,\n        setSelectedService: setSelectedService,\n        locations: locations,\n        teamMembers: teamMembers,\n        services: services,\n        onSubmit: createBooking,\n        onCancel: () => setShowBookingForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"rWxmNoxAVgKuij+82zcLkKgLGQw=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","BookingForm","jsxDEV","_jsxDEV","Calendar","_s","events","setEvents","locations","setLocations","teamMembers","setTeamMembers","services","setServices","showBookingForm","setShowBookingForm","selectedSlot","setSelectedSlot","customerId","setCustomerId","selectedLocation","setSelectedLocation","selectedTeamMember","setSelectedTeamMember","selectedService","setSelectedService","sidebarDay","setSidebarDay","Date","availableSlots","setAvailableSlots","loadData","locRes","teamRes","serviceRes","bookingRes","Promise","all","fetch","then","r","json","Array","isArray","team_members","id","team_member_details","given_name","family_name","objects","item_data","name","map","b","_b$customer","title","customer","display_name","start","start_at","end","end_at","team_member_id","err","console","error","alert","slots","hour","setHours","conflict","some","e","push","handleDateSelect","selectInfo","staffConflict","startStr","endStr","createBooking","payload","booking","customer_id","location_id","appointment_segments","service_variation_id","service_variation_version","res","method","headers","body","JSON","stringify","status","data","prev","_data$customer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","selectable","select","headerToolbar","left","center","right","height","info","dayMaxEvents","length","slot","onClick","toISOString","toLocaleTimeString","minute","onSubmit","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/dah03/calendar/mycalendar/src/components/App/Calendar/Calendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport BookingForm from \"./BookingForm/BookingForm\";\r\nimport \"./Calendar.css\";\r\n\r\nexport default function Calendar() {\r\n  const [events, setEvents] = useState([]);\r\n  const [locations, setLocations] = useState([]);\r\n  const [teamMembers, setTeamMembers] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const [showBookingForm, setShowBookingForm] = useState(false);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [customerId, setCustomerId] = useState(\"\");\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n  const [selectedTeamMember, setSelectedTeamMember] = useState(\"\");\r\n  const [selectedService, setSelectedService] = useState(\"\");\r\n\r\n  const [sidebarDay, setSidebarDay] = useState(new Date());\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n\r\n  // load backend data\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      try {\r\n        const [locRes, teamRes, serviceRes, bookingRes] = await Promise.all([\r\n          fetch(\"http://localhost:4000/api/locations\").then((r) => r.json()),\r\n          fetch(\"http://localhost:4000/api/team-members\").then((r) => r.json()),\r\n          fetch(\"http://localhost:4000/api/services\").then((r) => r.json()),\r\n          fetch(\"http://localhost:4000/api/bookings\").then((r) => r.json()),\r\n        ]);\r\n\r\n        setLocations(Array.isArray(locRes) ? locRes : []);\r\n        setTeamMembers(\r\n          teamRes?.team_members || [\r\n            {\r\n              id: \"test1\",\r\n              team_member_details: { given_name: \"Lucy\", family_name: \"Oh\" },\r\n            },\r\n          ]\r\n        );\r\n        setServices(\r\n          serviceRes?.objects || [\r\n            { id: \"srv1\", item_data: { name: \"Manicure\" } },\r\n            { id: \"srv2\", item_data: { name: \"Pedicure\" } },\r\n            { id: \"srv3\", item_data: { name: \"Nail Art\" } },\r\n            { id: \"srv4\", item_data: { name: \"Gel Nails\" } },\r\n            { id: \"srv5\", item_data: { name: \"Acrylic Nails\" } },\r\n          ]\r\n        );\r\n        setEvents(\r\n          Array.isArray(bookingRes)\r\n            ? bookingRes.map((b) => ({\r\n                id: b.id,\r\n                title: b.customer?.display_name || \"Booking\",\r\n                start: b.start_at,\r\n                end: b.end_at,\r\n                team_member_id: b.team_member_id || null,\r\n              }))\r\n            : []\r\n        );\r\n      } catch (err) {\r\n        console.error(\"Failed to load data:\", err);\r\n        alert(\"Error loading data — check console\");\r\n      }\r\n    }\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  // available slots sidebar\r\n  useEffect(() => {\r\n    if (!selectedTeamMember) {\r\n      setAvailableSlots([]);\r\n      return;\r\n    }\r\n\r\n    const slots = [];\r\n    for (let hour = 9; hour < 17; hour++) {\r\n      const start = new Date(sidebarDay);\r\n      start.setHours(hour, 0, 0, 0);\r\n      const end = new Date(sidebarDay);\r\n      end.setHours(hour + 1, 0, 0, 0);\r\n\r\n      const conflict = events.some(\r\n        (e) =>\r\n          e.team_member_id === selectedTeamMember &&\r\n          new Date(e.start) < end &&\r\n          new Date(e.end) > start\r\n      );\r\n\r\n      if (!conflict) slots.push({ start, end });\r\n    }\r\n    setAvailableSlots(slots);\r\n  }, [events, sidebarDay, selectedTeamMember]);\r\n\r\n  const handleDateSelect = (selectInfo) => {\r\n    const staffConflict = events.some(\r\n      (e) =>\r\n        e.team_member_id === selectedTeamMember &&\r\n        new Date(selectInfo.start) < new Date(e.end) &&\r\n        new Date(selectInfo.end) > new Date(e.start)\r\n    );\r\n\r\n    if (staffConflict) {\r\n      alert(\"This slot is already booked for the selected staff.\");\r\n      return;\r\n    }\r\n\r\n    setSelectedSlot({ start: selectInfo.startStr, end: selectInfo.endStr });\r\n    setShowBookingForm(true);\r\n  };\r\n\r\n  const createBooking = async () => {\r\n    if (\r\n      !customerId ||\r\n      !selectedLocation ||\r\n      !selectedTeamMember ||\r\n      !selectedService\r\n    ) {\r\n      return alert(\"Please fill all fields!\");\r\n    }\r\n\r\n    const payload = {\r\n      booking: {\r\n        customer_id: customerId,\r\n        location_id: selectedLocation,\r\n        start_at: selectedSlot.start,\r\n        end_at: selectedSlot.end,\r\n        appointment_segments: [\r\n          {\r\n            team_member_id: selectedTeamMember,\r\n            service_variation_id: selectedService,\r\n            service_variation_version: 1,\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:4000/api/bookings\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (res.status === 409) return alert(\"This time slot is already booked.\");\r\n\r\n      const data = await res.json();\r\n      if (data.id) {\r\n        setEvents((prev) => [\r\n          ...prev,\r\n          {\r\n            id: data.id,\r\n            title: data.customer?.display_name || \"Booking\",\r\n            start: data.start_at,\r\n            end: data.end_at,\r\n            team_member_id: selectedTeamMember,\r\n          },\r\n        ]);\r\n        setShowBookingForm(false);\r\n        setCustomerId(\"\");\r\n        setSelectedLocation(\"\");\r\n        setSelectedTeamMember(\"\");\r\n        setSelectedService(\"\");\r\n        setSelectedSlot(null);\r\n        alert(\"Booking created ✅\");\r\n      } else {\r\n        alert(\"Failed to create booking — check console\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error creating booking — check console\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      {/* Calendar & Sidebar on the left */}\r\n      <div className=\"calendar-left\">\r\n\r\n        {/* Calendar */}\r\n        <div className=\"booking-calendar\">\r\n          <h3>📅 Select Date & Time</h3>\r\n          <p>Choose your preferred appointment date and available time slot.</p>\r\n\r\n          <div className=\"calendar-box\">\r\n            <FullCalendar\r\n              plugins={[dayGridPlugin, interactionPlugin]}\r\n              initialView=\"dayGridMonth\"\r\n              selectable={true}\r\n              events={events}\r\n              select={handleDateSelect}\r\n              headerToolbar={{\r\n                left: \"prev\",\r\n                center: \"title\",\r\n                right: \"next\",\r\n              }}\r\n              height=\"auto\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"legend\">\r\n            <span className=\"dot available\"></span> Available\r\n            <span className=\"dot unavailable\"></span> Unavailable\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"calendar-sidebar\">\r\n  <h3>📅 Select Date & Time</h3>\r\n  <p>Choose your preferred appointment date and available time slot.</p>\r\n\r\n  {/* Date Picker Calendar (Month View) */}\r\n  <div className=\"mini-calendar\">\r\n    <FullCalendar\r\n      plugins={[dayGridPlugin, interactionPlugin]}\r\n      initialView=\"dayGridMonth\"\r\n      selectable={true}\r\n      select={(info) => setSidebarDay(new Date(info.startStr))}\r\n      headerToolbar={{\r\n        left: \"prev\",\r\n        center: \"title\",\r\n        right: \"next\",\r\n      }}\r\n      height=\"auto\"\r\n      dayMaxEvents={true}\r\n    />\r\n  </div>\r\n\r\n  {/* Time Slots */}\r\n  <div className=\"time-slots\">\r\n    {availableSlots.length ? (\r\n      availableSlots.map((slot) => (\r\n        <button\r\n          className=\"time-slot-btn\"\r\n          key={slot.start.toISOString()}\r\n          onClick={() => {\r\n            setSelectedSlot({\r\n              start: slot.start.toISOString(),\r\n              end: slot.end.toISOString(),\r\n            });\r\n            setShowBookingForm(true);\r\n          }}\r\n        >\r\n          {slot.start.toLocaleTimeString([], {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          })}{\" \"}\r\n          -{\" \"}\r\n          {slot.end.toLocaleTimeString([], {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          })}\r\n        </button>\r\n      ))\r\n    ) : (\r\n      <p>No available slots for this day</p>\r\n    )}\r\n  </div>\r\n\r\n  {/* Legend */}\r\n  <div className=\"legend\">\r\n    <span className=\"dot available\"></span> Available\r\n    <span className=\"dot unavailable\"></span> Unavailable\r\n  </div>\r\n</div>\r\n\r\n      </div>\r\n\r\n      {/* Booking form on the right */}\r\n      <div className=\"calendar-right\">\r\n        {showBookingForm && (\r\n          <BookingForm\r\n            customerId={customerId}\r\n            setCustomerId={setCustomerId}\r\n            selectedLocation={selectedLocation}\r\n            setSelectedLocation={setSelectedLocation}\r\n            selectedTeamMember={selectedTeamMember}\r\n            setSelectedTeamMember={setSelectedTeamMember}\r\n            selectedService={selectedService}\r\n            setSelectedService={setSelectedService}\r\n            locations={locations}\r\n            teamMembers={teamMembers}\r\n            services={services}\r\n            onSubmit={createBooking}\r\n            onCancel={() => setShowBookingForm(false)}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}