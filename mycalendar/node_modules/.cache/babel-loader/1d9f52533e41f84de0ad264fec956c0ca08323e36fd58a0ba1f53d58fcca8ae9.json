{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * @param {string} path path\n * @returns {{paths: string[], segments: string[]}}} paths and segments\n */\nmodule.exports = function getPaths(path) {\n  if (path === \"/\") return {\n    paths: [\"/\"],\n    segments: [\"\"]\n  };\n  const parts = path.split(/(.*?[\\\\/]+)/);\n  const paths = [path];\n  const segments = [parts[parts.length - 1]];\n  let part = parts[parts.length - 1];\n  path = path.slice(0, Math.max(0, path.length - part.length - 1));\n  for (let i = parts.length - 2; i > 2; i -= 2) {\n    paths.push(path);\n    part = parts[i];\n    path = path.slice(0, Math.max(0, path.length - part.length)) || \"/\";\n    segments.push(part.slice(0, -1));\n  }\n  [, part] = parts;\n  segments.push(part);\n  paths.push(part);\n  return {\n    paths,\n    segments\n  };\n};\n\n/**\n * @param {string} path path\n * @returns {string|null} basename or null\n */\nmodule.exports.basename = function basename(path) {\n  const i = path.lastIndexOf(\"/\");\n  const j = path.lastIndexOf(\"\\\\\");\n  const resolvedPath = i < 0 ? j : j < 0 ? i : i < j ? j : i;\n  if (resolvedPath < 0) return null;\n  const basename = path.slice(resolvedPath + 1);\n  return basename;\n};","map":{"version":3,"names":["module","exports","getPaths","path","paths","segments","parts","split","length","part","slice","Math","max","i","push","basename","lastIndexOf","j","resolvedPath"],"sources":["C:/Users/dah03/calendar/mycalendar/node_modules/enhanced-resolve/lib/getPaths.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * @param {string} path path\n * @returns {{paths: string[], segments: string[]}}} paths and segments\n */\nmodule.exports = function getPaths(path) {\n\tif (path === \"/\") return { paths: [\"/\"], segments: [\"\"] };\n\tconst parts = path.split(/(.*?[\\\\/]+)/);\n\tconst paths = [path];\n\tconst segments = [parts[parts.length - 1]];\n\tlet part = parts[parts.length - 1];\n\tpath = path.slice(0, Math.max(0, path.length - part.length - 1));\n\tfor (let i = parts.length - 2; i > 2; i -= 2) {\n\t\tpaths.push(path);\n\t\tpart = parts[i];\n\t\tpath = path.slice(0, Math.max(0, path.length - part.length)) || \"/\";\n\t\tsegments.push(part.slice(0, -1));\n\t}\n\t[, part] = parts;\n\tsegments.push(part);\n\tpaths.push(part);\n\treturn {\n\t\tpaths,\n\t\tsegments,\n\t};\n};\n\n/**\n * @param {string} path path\n * @returns {string|null} basename or null\n */\nmodule.exports.basename = function basename(path) {\n\tconst i = path.lastIndexOf(\"/\");\n\tconst j = path.lastIndexOf(\"\\\\\");\n\tconst resolvedPath = i < 0 ? j : j < 0 ? i : i < j ? j : i;\n\tif (resolvedPath < 0) return null;\n\tconst basename = path.slice(resolvedPath + 1);\n\treturn basename;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,QAAQA,CAACC,IAAI,EAAE;EACxC,IAAIA,IAAI,KAAK,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAE,CAAC,GAAG,CAAC;IAAEC,QAAQ,EAAE,CAAC,EAAE;EAAE,CAAC;EACzD,MAAMC,KAAK,GAAGH,IAAI,CAACI,KAAK,CAAC,aAAa,CAAC;EACvC,MAAMH,KAAK,GAAG,CAACD,IAAI,CAAC;EACpB,MAAME,QAAQ,GAAG,CAACC,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC;EAC1C,IAAIC,IAAI,GAAGH,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;EAClCL,IAAI,GAAGA,IAAI,CAACO,KAAK,CAAC,CAAC,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAET,IAAI,CAACK,MAAM,GAAGC,IAAI,CAACD,MAAM,GAAG,CAAC,CAAC,CAAC;EAChE,KAAK,IAAIK,CAAC,GAAGP,KAAK,CAACE,MAAM,GAAG,CAAC,EAAEK,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;IAC7CT,KAAK,CAACU,IAAI,CAACX,IAAI,CAAC;IAChBM,IAAI,GAAGH,KAAK,CAACO,CAAC,CAAC;IACfV,IAAI,GAAGA,IAAI,CAACO,KAAK,CAAC,CAAC,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAET,IAAI,CAACK,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,CAAC,IAAI,GAAG;IACnEH,QAAQ,CAACS,IAAI,CAACL,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjC;EACA,GAAGD,IAAI,CAAC,GAAGH,KAAK;EAChBD,QAAQ,CAACS,IAAI,CAACL,IAAI,CAAC;EACnBL,KAAK,CAACU,IAAI,CAACL,IAAI,CAAC;EAChB,OAAO;IACNL,KAAK;IACLC;EACD,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACAL,MAAM,CAACC,OAAO,CAACc,QAAQ,GAAG,SAASA,QAAQA,CAACZ,IAAI,EAAE;EACjD,MAAMU,CAAC,GAAGV,IAAI,CAACa,WAAW,CAAC,GAAG,CAAC;EAC/B,MAAMC,CAAC,GAAGd,IAAI,CAACa,WAAW,CAAC,IAAI,CAAC;EAChC,MAAME,YAAY,GAAGL,CAAC,GAAG,CAAC,GAAGI,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGJ,CAAC,GAAGA,CAAC,GAAGI,CAAC,GAAGA,CAAC,GAAGJ,CAAC;EAC1D,IAAIK,YAAY,GAAG,CAAC,EAAE,OAAO,IAAI;EACjC,MAAMH,QAAQ,GAAGZ,IAAI,CAACO,KAAK,CAACQ,YAAY,GAAG,CAAC,CAAC;EAC7C,OAAOH,QAAQ;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}