{"ast":null,"code":"const BROWSER_MAPPING = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  op_mob: 'opera',\n  and_qq: null,\n  and_uc: null,\n  baidu: null,\n  bb: null,\n  kaios: null,\n  op_mini: null\n};\nfunction browserslistToTargets(browserslist) {\n  let targets = {};\n  for (let browser of browserslist) {\n    let [name, v] = browser.split(' ');\n    if (BROWSER_MAPPING[name] === null) {\n      continue;\n    }\n    let version = parseVersion(v);\n    if (version == null) {\n      continue;\n    }\n    if (targets[name] == null || version < targets[name]) {\n      targets[name] = version;\n    }\n  }\n  return targets;\n}\nfunction parseVersion(version) {\n  let [major, minor = 0, patch = 0] = version.split('-')[0].split('.').map(v => parseInt(v, 10));\n  if (isNaN(major) || isNaN(minor) || isNaN(patch)) {\n    return null;\n  }\n  return major << 16 | minor << 8 | patch;\n}\nmodule.exports = browserslistToTargets;","map":{"version":3,"names":["BROWSER_MAPPING","and_chr","and_ff","ie_mob","op_mob","and_qq","and_uc","baidu","bb","kaios","op_mini","browserslistToTargets","browserslist","targets","browser","name","v","split","version","parseVersion","major","minor","patch","map","parseInt","isNaN","module","exports"],"sources":["C:/Users/dah03/calendar/mycalendar/node_modules/lightningcss/node/browserslistToTargets.js"],"sourcesContent":["const BROWSER_MAPPING = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  op_mob: 'opera',\n  and_qq: null,\n  and_uc: null,\n  baidu: null,\n  bb: null,\n  kaios: null,\n  op_mini: null,\n};\n\nfunction browserslistToTargets(browserslist) {\n  let targets = {};\n  for (let browser of browserslist) {\n    let [name, v] = browser.split(' ');\n    if (BROWSER_MAPPING[name] === null) {\n      continue;\n    }\n\n    let version = parseVersion(v);\n    if (version == null) {\n      continue;\n    }\n\n    if (targets[name] == null || version < targets[name]) {\n      targets[name] = version;\n    }\n  }\n\n  return targets;\n}\n\nfunction parseVersion(version) {\n  let [major, minor = 0, patch = 0] = version\n    .split('-')[0]\n    .split('.')\n    .map(v => parseInt(v, 10));\n\n  if (isNaN(major) || isNaN(minor) || isNaN(patch)) {\n    return null;\n  }\n\n  return (major << 16) | (minor << 8) | patch;\n}\n\nmodule.exports = browserslistToTargets;\n"],"mappings":"AAAA,MAAMA,eAAe,GAAG;EACtBC,OAAO,EAAE,QAAQ;EACjBC,MAAM,EAAE,SAAS;EACjBC,MAAM,EAAE,IAAI;EACZC,MAAM,EAAE,OAAO;EACfC,MAAM,EAAE,IAAI;EACZC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC;AAED,SAASC,qBAAqBA,CAACC,YAAY,EAAE;EAC3C,IAAIC,OAAO,GAAG,CAAC,CAAC;EAChB,KAAK,IAAIC,OAAO,IAAIF,YAAY,EAAE;IAChC,IAAI,CAACG,IAAI,EAAEC,CAAC,CAAC,GAAGF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC;IAClC,IAAIjB,eAAe,CAACe,IAAI,CAAC,KAAK,IAAI,EAAE;MAClC;IACF;IAEA,IAAIG,OAAO,GAAGC,YAAY,CAACH,CAAC,CAAC;IAC7B,IAAIE,OAAO,IAAI,IAAI,EAAE;MACnB;IACF;IAEA,IAAIL,OAAO,CAACE,IAAI,CAAC,IAAI,IAAI,IAAIG,OAAO,GAAGL,OAAO,CAACE,IAAI,CAAC,EAAE;MACpDF,OAAO,CAACE,IAAI,CAAC,GAAGG,OAAO;IACzB;EACF;EAEA,OAAOL,OAAO;AAChB;AAEA,SAASM,YAAYA,CAACD,OAAO,EAAE;EAC7B,IAAI,CAACE,KAAK,EAAEC,KAAK,GAAG,CAAC,EAAEC,KAAK,GAAG,CAAC,CAAC,GAAGJ,OAAO,CACxCD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACbA,KAAK,CAAC,GAAG,CAAC,CACVM,GAAG,CAACP,CAAC,IAAIQ,QAAQ,CAACR,CAAC,EAAE,EAAE,CAAC,CAAC;EAE5B,IAAIS,KAAK,CAACL,KAAK,CAAC,IAAIK,KAAK,CAACJ,KAAK,CAAC,IAAII,KAAK,CAACH,KAAK,CAAC,EAAE;IAChD,OAAO,IAAI;EACb;EAEA,OAAQF,KAAK,IAAI,EAAE,GAAKC,KAAK,IAAI,CAAE,GAAGC,KAAK;AAC7C;AAEAI,MAAM,CAACC,OAAO,GAAGhB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}