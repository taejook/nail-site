{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").JsonObject} JsonObject */\n/** @typedef {import(\"./Resolver\").JsonValue} JsonValue */\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/**\n * @typedef {object} DescriptionFileInfo\n * @property {JsonObject=} content content\n * @property {string} path path\n * @property {string} directory directory\n */\n\n/**\n * @callback ErrorFirstCallback\n * @param {Error|null=} error\n * @param {DescriptionFileInfo=} result\n */\n\n/**\n * @typedef {object} Result\n * @property {string} path path to description file\n * @property {string} directory directory of description file\n * @property {JsonObject} content content of description file\n */\n\n/**\n * @param {string} directory directory\n * @returns {string|null} parent directory or null\n */\nfunction cdUp(directory) {\n  if (directory === \"/\") return null;\n  const i = directory.lastIndexOf(\"/\");\n  const j = directory.lastIndexOf(\"\\\\\");\n  const path = i < 0 ? j : j < 0 ? i : i < j ? j : i;\n  if (path < 0) return null;\n  return directory.slice(0, path || 1);\n}\n\n/**\n * @param {Resolver} resolver resolver\n * @param {string} directory directory\n * @param {string[]} filenames filenames\n * @param {DescriptionFileInfo|undefined} oldInfo oldInfo\n * @param {ResolveContext} resolveContext resolveContext\n * @param {ErrorFirstCallback} callback callback\n */\nfunction loadDescriptionFile(resolver, directory, filenames, oldInfo, resolveContext, callback) {\n  (function findDescriptionFile() {\n    if (oldInfo && oldInfo.directory === directory) {\n      // We already have info for this directory and can reuse it\n      return callback(null, oldInfo);\n    }\n    forEachBail(filenames,\n    /**\n     * @param {string} filename filename\n     * @param {(err?: null|Error, result?: null|Result) => void} callback callback\n     * @returns {void}\n     */\n    (filename, callback) => {\n      const descriptionFilePath = resolver.join(directory, filename);\n\n      /**\n       * @param {(null | Error)=} err error\n       * @param {JsonObject=} resolvedContent content\n       * @returns {void}\n       */\n      function onJson(err, resolvedContent) {\n        if (err) {\n          if (resolveContext.log) {\n            resolveContext.log(`${descriptionFilePath} (directory description file): ${err}`);\n          } else {\n            err.message = `${descriptionFilePath} (directory description file): ${err}`;\n          }\n          return callback(err);\n        }\n        callback(null, {\n          content: (/** @type {JsonObject} */resolvedContent),\n          directory,\n          path: descriptionFilePath\n        });\n      }\n      if (resolver.fileSystem.readJson) {\n        resolver.fileSystem.readJson(descriptionFilePath, (err, content) => {\n          if (err) {\n            if (typeof (/** @type {NodeJS.ErrnoException} */err.code) !== \"undefined\") {\n              if (resolveContext.missingDependencies) {\n                resolveContext.missingDependencies.add(descriptionFilePath);\n              }\n              return callback();\n            }\n            if (resolveContext.fileDependencies) {\n              resolveContext.fileDependencies.add(descriptionFilePath);\n            }\n            return onJson(err);\n          }\n          if (resolveContext.fileDependencies) {\n            resolveContext.fileDependencies.add(descriptionFilePath);\n          }\n          onJson(null, content);\n        });\n      } else {\n        resolver.fileSystem.readFile(descriptionFilePath, (err, content) => {\n          if (err) {\n            if (resolveContext.missingDependencies) {\n              resolveContext.missingDependencies.add(descriptionFilePath);\n            }\n            return callback();\n          }\n          if (resolveContext.fileDependencies) {\n            resolveContext.fileDependencies.add(descriptionFilePath);\n          }\n\n          /** @type {JsonObject | undefined} */\n          let json;\n          if (content) {\n            try {\n              json = JSON.parse(content.toString());\n            } catch (/** @type {unknown} */err_) {\n              return onJson(/** @type {Error} */err_);\n            }\n          } else {\n            return onJson(new Error(\"No content in file\"));\n          }\n          onJson(null, json);\n        });\n      }\n    },\n    /**\n     * @param {(null | Error)=} err error\n     * @param {(null | Result)=} result result\n     * @returns {void}\n     */\n    (err, result) => {\n      if (err) return callback(err);\n      if (result) return callback(null, result);\n      const dir = cdUp(directory);\n      if (!dir) {\n        return callback();\n      }\n      directory = dir;\n      return findDescriptionFile();\n    });\n  })();\n}\n\n/**\n * @param {JsonObject} content content\n * @param {string|string[]} field field\n * @returns {JsonValue | undefined} field data\n */\nfunction getField(content, field) {\n  if (!content) return undefined;\n  if (Array.isArray(field)) {\n    /** @type {JsonValue} */\n    let current = content;\n    for (let j = 0; j < field.length; j++) {\n      if (current === null || typeof current !== \"object\") {\n        current = null;\n        break;\n      }\n      current = /** @type {JsonValue} */\n      /** @type {JsonObject} */\n      current[field[j]];\n    }\n    return current;\n  }\n  return content[field];\n}\nmodule.exports.cdUp = cdUp;\nmodule.exports.getField = getField;\nmodule.exports.loadDescriptionFile = loadDescriptionFile;","map":{"version":3,"names":["forEachBail","require","cdUp","directory","i","lastIndexOf","j","path","slice","loadDescriptionFile","resolver","filenames","oldInfo","resolveContext","callback","findDescriptionFile","filename","descriptionFilePath","join","onJson","err","resolvedContent","log","message","content","fileSystem","readJson","code","missingDependencies","add","fileDependencies","readFile","json","JSON","parse","toString","err_","Error","result","dir","getField","field","undefined","Array","isArray","current","length","module","exports"],"sources":["C:/Users/dah03/calendar/mycalendar/node_modules/enhanced-resolve/lib/DescriptionFileUtils.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").JsonObject} JsonObject */\n/** @typedef {import(\"./Resolver\").JsonValue} JsonValue */\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/**\n * @typedef {object} DescriptionFileInfo\n * @property {JsonObject=} content content\n * @property {string} path path\n * @property {string} directory directory\n */\n\n/**\n * @callback ErrorFirstCallback\n * @param {Error|null=} error\n * @param {DescriptionFileInfo=} result\n */\n\n/**\n * @typedef {object} Result\n * @property {string} path path to description file\n * @property {string} directory directory of description file\n * @property {JsonObject} content content of description file\n */\n\n/**\n * @param {string} directory directory\n * @returns {string|null} parent directory or null\n */\nfunction cdUp(directory) {\n\tif (directory === \"/\") return null;\n\tconst i = directory.lastIndexOf(\"/\");\n\tconst j = directory.lastIndexOf(\"\\\\\");\n\tconst path = i < 0 ? j : j < 0 ? i : i < j ? j : i;\n\tif (path < 0) return null;\n\treturn directory.slice(0, path || 1);\n}\n\n/**\n * @param {Resolver} resolver resolver\n * @param {string} directory directory\n * @param {string[]} filenames filenames\n * @param {DescriptionFileInfo|undefined} oldInfo oldInfo\n * @param {ResolveContext} resolveContext resolveContext\n * @param {ErrorFirstCallback} callback callback\n */\nfunction loadDescriptionFile(\n\tresolver,\n\tdirectory,\n\tfilenames,\n\toldInfo,\n\tresolveContext,\n\tcallback,\n) {\n\t(function findDescriptionFile() {\n\t\tif (oldInfo && oldInfo.directory === directory) {\n\t\t\t// We already have info for this directory and can reuse it\n\t\t\treturn callback(null, oldInfo);\n\t\t}\n\t\tforEachBail(\n\t\t\tfilenames,\n\t\t\t/**\n\t\t\t * @param {string} filename filename\n\t\t\t * @param {(err?: null|Error, result?: null|Result) => void} callback callback\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\t(filename, callback) => {\n\t\t\t\tconst descriptionFilePath = resolver.join(directory, filename);\n\n\t\t\t\t/**\n\t\t\t\t * @param {(null | Error)=} err error\n\t\t\t\t * @param {JsonObject=} resolvedContent content\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tfunction onJson(err, resolvedContent) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t`${descriptionFilePath} (directory description file): ${err}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\terr.message = `${descriptionFilePath} (directory description file): ${err}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\t\t\t\t\tcallback(null, {\n\t\t\t\t\t\tcontent: /** @type {JsonObject} */ (resolvedContent),\n\t\t\t\t\t\tdirectory,\n\t\t\t\t\t\tpath: descriptionFilePath,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (resolver.fileSystem.readJson) {\n\t\t\t\t\tresolver.fileSystem.readJson(descriptionFilePath, (err, content) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\ttypeof (/** @type {NodeJS.ErrnoException} */ (err).code) !==\n\t\t\t\t\t\t\t\t\"undefined\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (resolveContext.missingDependencies) {\n\t\t\t\t\t\t\t\t\tresolveContext.missingDependencies.add(descriptionFilePath);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (resolveContext.fileDependencies) {\n\t\t\t\t\t\t\t\tresolveContext.fileDependencies.add(descriptionFilePath);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn onJson(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (resolveContext.fileDependencies) {\n\t\t\t\t\t\t\tresolveContext.fileDependencies.add(descriptionFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonJson(null, content);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresolver.fileSystem.readFile(descriptionFilePath, (err, content) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tif (resolveContext.missingDependencies) {\n\t\t\t\t\t\t\t\tresolveContext.missingDependencies.add(descriptionFilePath);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (resolveContext.fileDependencies) {\n\t\t\t\t\t\t\tresolveContext.fileDependencies.add(descriptionFilePath);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/** @type {JsonObject | undefined} */\n\t\t\t\t\t\tlet json;\n\n\t\t\t\t\t\tif (content) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tjson = JSON.parse(content.toString());\n\t\t\t\t\t\t\t} catch (/** @type {unknown} */ err_) {\n\t\t\t\t\t\t\t\treturn onJson(/** @type {Error} */ (err_));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn onJson(new Error(\"No content in file\"));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonJson(null, json);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * @param {(null | Error)=} err error\n\t\t\t * @param {(null | Result)=} result result\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\t(err, result) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tif (result) return callback(null, result);\n\t\t\t\tconst dir = cdUp(directory);\n\t\t\t\tif (!dir) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tdirectory = dir;\n\t\t\t\treturn findDescriptionFile();\n\t\t\t},\n\t\t);\n\t})();\n}\n\n/**\n * @param {JsonObject} content content\n * @param {string|string[]} field field\n * @returns {JsonValue | undefined} field data\n */\nfunction getField(content, field) {\n\tif (!content) return undefined;\n\tif (Array.isArray(field)) {\n\t\t/** @type {JsonValue} */\n\t\tlet current = content;\n\t\tfor (let j = 0; j < field.length; j++) {\n\t\t\tif (current === null || typeof current !== \"object\") {\n\t\t\t\tcurrent = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent = /** @type {JsonValue} */ (\n\t\t\t\t/** @type {JsonObject} */\n\t\t\t\t(current)[field[j]]\n\t\t\t);\n\t\t}\n\t\treturn current;\n\t}\n\treturn content[field];\n}\n\nmodule.exports.cdUp = cdUp;\nmodule.exports.getField = getField;\nmodule.exports.loadDescriptionFile = loadDescriptionFile;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAASC,IAAIA,CAACC,SAAS,EAAE;EACxB,IAAIA,SAAS,KAAK,GAAG,EAAE,OAAO,IAAI;EAClC,MAAMC,CAAC,GAAGD,SAAS,CAACE,WAAW,CAAC,GAAG,CAAC;EACpC,MAAMC,CAAC,GAAGH,SAAS,CAACE,WAAW,CAAC,IAAI,CAAC;EACrC,MAAME,IAAI,GAAGH,CAAC,GAAG,CAAC,GAAGE,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGF,CAAC,GAAGA,CAAC,GAAGE,CAAC,GAAGA,CAAC,GAAGF,CAAC;EAClD,IAAIG,IAAI,GAAG,CAAC,EAAE,OAAO,IAAI;EACzB,OAAOJ,SAAS,CAACK,KAAK,CAAC,CAAC,EAAED,IAAI,IAAI,CAAC,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,mBAAmBA,CAC3BC,QAAQ,EACRP,SAAS,EACTQ,SAAS,EACTC,OAAO,EACPC,cAAc,EACdC,QAAQ,EACP;EACD,CAAC,SAASC,mBAAmBA,CAAA,EAAG;IAC/B,IAAIH,OAAO,IAAIA,OAAO,CAACT,SAAS,KAAKA,SAAS,EAAE;MAC/C;MACA,OAAOW,QAAQ,CAAC,IAAI,EAAEF,OAAO,CAAC;IAC/B;IACAZ,WAAW,CACVW,SAAS;IACT;AACH;AACA;AACA;AACA;IACG,CAACK,QAAQ,EAAEF,QAAQ,KAAK;MACvB,MAAMG,mBAAmB,GAAGP,QAAQ,CAACQ,IAAI,CAACf,SAAS,EAAEa,QAAQ,CAAC;;MAE9D;AACJ;AACA;AACA;AACA;MACI,SAASG,MAAMA,CAACC,GAAG,EAAEC,eAAe,EAAE;QACrC,IAAID,GAAG,EAAE;UACR,IAAIP,cAAc,CAACS,GAAG,EAAE;YACvBT,cAAc,CAACS,GAAG,CACjB,GAAGL,mBAAmB,kCAAkCG,GAAG,EAC5D,CAAC;UACF,CAAC,MAAM;YACNA,GAAG,CAACG,OAAO,GAAG,GAAGN,mBAAmB,kCAAkCG,GAAG,EAAE;UAC5E;UACA,OAAON,QAAQ,CAACM,GAAG,CAAC;QACrB;QACAN,QAAQ,CAAC,IAAI,EAAE;UACdU,OAAO,GAAE,yBAA2BH,eAAe,CAAC;UACpDlB,SAAS;UACTI,IAAI,EAAEU;QACP,CAAC,CAAC;MACH;MAEA,IAAIP,QAAQ,CAACe,UAAU,CAACC,QAAQ,EAAE;QACjChB,QAAQ,CAACe,UAAU,CAACC,QAAQ,CAACT,mBAAmB,EAAE,CAACG,GAAG,EAAEI,OAAO,KAAK;UACnE,IAAIJ,GAAG,EAAE;YACR,IACC,QAAQ,oCAAsCA,GAAG,CAAEO,IAAI,CAAC,KACxD,WAAW,EACV;cACD,IAAId,cAAc,CAACe,mBAAmB,EAAE;gBACvCf,cAAc,CAACe,mBAAmB,CAACC,GAAG,CAACZ,mBAAmB,CAAC;cAC5D;cACA,OAAOH,QAAQ,CAAC,CAAC;YAClB;YACA,IAAID,cAAc,CAACiB,gBAAgB,EAAE;cACpCjB,cAAc,CAACiB,gBAAgB,CAACD,GAAG,CAACZ,mBAAmB,CAAC;YACzD;YACA,OAAOE,MAAM,CAACC,GAAG,CAAC;UACnB;UACA,IAAIP,cAAc,CAACiB,gBAAgB,EAAE;YACpCjB,cAAc,CAACiB,gBAAgB,CAACD,GAAG,CAACZ,mBAAmB,CAAC;UACzD;UACAE,MAAM,CAAC,IAAI,EAAEK,OAAO,CAAC;QACtB,CAAC,CAAC;MACH,CAAC,MAAM;QACNd,QAAQ,CAACe,UAAU,CAACM,QAAQ,CAACd,mBAAmB,EAAE,CAACG,GAAG,EAAEI,OAAO,KAAK;UACnE,IAAIJ,GAAG,EAAE;YACR,IAAIP,cAAc,CAACe,mBAAmB,EAAE;cACvCf,cAAc,CAACe,mBAAmB,CAACC,GAAG,CAACZ,mBAAmB,CAAC;YAC5D;YACA,OAAOH,QAAQ,CAAC,CAAC;UAClB;UACA,IAAID,cAAc,CAACiB,gBAAgB,EAAE;YACpCjB,cAAc,CAACiB,gBAAgB,CAACD,GAAG,CAACZ,mBAAmB,CAAC;UACzD;;UAEA;UACA,IAAIe,IAAI;UAER,IAAIR,OAAO,EAAE;YACZ,IAAI;cACHQ,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACV,OAAO,CAACW,QAAQ,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC,OAAO,sBAAuBC,IAAI,EAAE;cACrC,OAAOjB,MAAM,CAAC,oBAAsBiB,IAAK,CAAC;YAC3C;UACD,CAAC,MAAM;YACN,OAAOjB,MAAM,CAAC,IAAIkB,KAAK,CAAC,oBAAoB,CAAC,CAAC;UAC/C;UAEAlB,MAAM,CAAC,IAAI,EAAEa,IAAI,CAAC;QACnB,CAAC,CAAC;MACH;IACD,CAAC;IACD;AACH;AACA;AACA;AACA;IACG,CAACZ,GAAG,EAAEkB,MAAM,KAAK;MAChB,IAAIlB,GAAG,EAAE,OAAON,QAAQ,CAACM,GAAG,CAAC;MAC7B,IAAIkB,MAAM,EAAE,OAAOxB,QAAQ,CAAC,IAAI,EAAEwB,MAAM,CAAC;MACzC,MAAMC,GAAG,GAAGrC,IAAI,CAACC,SAAS,CAAC;MAC3B,IAAI,CAACoC,GAAG,EAAE;QACT,OAAOzB,QAAQ,CAAC,CAAC;MAClB;MACAX,SAAS,GAAGoC,GAAG;MACf,OAAOxB,mBAAmB,CAAC,CAAC;IAC7B,CACD,CAAC;EACF,CAAC,EAAE,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASyB,QAAQA,CAAChB,OAAO,EAAEiB,KAAK,EAAE;EACjC,IAAI,CAACjB,OAAO,EAAE,OAAOkB,SAAS;EAC9B,IAAIC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE;IACzB;IACA,IAAII,OAAO,GAAGrB,OAAO;IACrB,KAAK,IAAIlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmC,KAAK,CAACK,MAAM,EAAExC,CAAC,EAAE,EAAE;MACtC,IAAIuC,OAAO,KAAK,IAAI,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;QACpDA,OAAO,GAAG,IAAI;QACd;MACD;MACAA,OAAO,GAAG;MACT;MACCA,OAAO,CAAEJ,KAAK,CAACnC,CAAC,CAAC,CAClB;IACF;IACA,OAAOuC,OAAO;EACf;EACA,OAAOrB,OAAO,CAACiB,KAAK,CAAC;AACtB;AAEAM,MAAM,CAACC,OAAO,CAAC9C,IAAI,GAAGA,IAAI;AAC1B6C,MAAM,CAACC,OAAO,CAACR,QAAQ,GAAGA,QAAQ;AAClCO,MAAM,CAACC,OAAO,CAACvC,mBAAmB,GAAGA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}