{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\nmodule.exports = class LogInfoPlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   */\n  constructor(source) {\n    this.source = source;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  apply(resolver) {\n    const {\n      source\n    } = this;\n    resolver.getHook(this.source).tapAsync(\"LogInfoPlugin\", (request, resolveContext, callback) => {\n      if (!resolveContext.log) return callback();\n      const {\n        log\n      } = resolveContext;\n      const prefix = `[${source}] `;\n      if (request.path) {\n        log(`${prefix}Resolving in directory: ${request.path}`);\n      }\n      if (request.request) {\n        log(`${prefix}Resolving request: ${request.request}`);\n      }\n      if (request.module) log(`${prefix}Request is an module request.`);\n      if (request.directory) log(`${prefix}Request is a directory request.`);\n      if (request.query) {\n        log(`${prefix}Resolving request query: ${request.query}`);\n      }\n      if (request.fragment) {\n        log(`${prefix}Resolving request fragment: ${request.fragment}`);\n      }\n      if (request.descriptionFilePath) {\n        log(`${prefix}Has description data from ${request.descriptionFilePath}`);\n      }\n      if (request.relativePath) {\n        log(`${prefix}Relative path from description file is: ${request.relativePath}`);\n      }\n      callback();\n    });\n  }\n};","map":{"version":3,"names":["module","exports","LogInfoPlugin","constructor","source","apply","resolver","getHook","tapAsync","request","resolveContext","callback","log","prefix","path","directory","query","fragment","descriptionFilePath","relativePath"],"sources":["C:/Users/dah03/calendar/mycalendar/node_modules/enhanced-resolve/lib/LogInfoPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class LogInfoPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t */\n\tconstructor(source) {\n\t\tthis.source = source;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst { source } = this;\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"LogInfoPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!resolveContext.log) return callback();\n\t\t\t\tconst { log } = resolveContext;\n\t\t\t\tconst prefix = `[${source}] `;\n\t\t\t\tif (request.path) {\n\t\t\t\t\tlog(`${prefix}Resolving in directory: ${request.path}`);\n\t\t\t\t}\n\t\t\t\tif (request.request) {\n\t\t\t\t\tlog(`${prefix}Resolving request: ${request.request}`);\n\t\t\t\t}\n\t\t\t\tif (request.module) log(`${prefix}Request is an module request.`);\n\t\t\t\tif (request.directory) log(`${prefix}Request is a directory request.`);\n\t\t\t\tif (request.query) {\n\t\t\t\t\tlog(`${prefix}Resolving request query: ${request.query}`);\n\t\t\t\t}\n\t\t\t\tif (request.fragment) {\n\t\t\t\t\tlog(`${prefix}Resolving request fragment: ${request.fragment}`);\n\t\t\t\t}\n\t\t\t\tif (request.descriptionFilePath) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t`${prefix}Has description data from ${request.descriptionFilePath}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (request.relativePath) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t`${prefix}Relative path from description file is: ${request.relativePath}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcallback();\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAEAA,MAAM,CAACC,OAAO,GAAG,MAAMC,aAAa,CAAC;EACpC;AACD;AACA;EACCC,WAAWA,CAACC,MAAM,EAAE;IACnB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAM;MAAEF;IAAO,CAAC,GAAG,IAAI;IACvBE,QAAQ,CACNC,OAAO,CAAC,IAAI,CAACH,MAAM,CAAC,CACpBI,QAAQ,CAAC,eAAe,EAAE,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MACjE,IAAI,CAACD,cAAc,CAACE,GAAG,EAAE,OAAOD,QAAQ,CAAC,CAAC;MAC1C,MAAM;QAAEC;MAAI,CAAC,GAAGF,cAAc;MAC9B,MAAMG,MAAM,GAAG,IAAIT,MAAM,IAAI;MAC7B,IAAIK,OAAO,CAACK,IAAI,EAAE;QACjBF,GAAG,CAAC,GAAGC,MAAM,2BAA2BJ,OAAO,CAACK,IAAI,EAAE,CAAC;MACxD;MACA,IAAIL,OAAO,CAACA,OAAO,EAAE;QACpBG,GAAG,CAAC,GAAGC,MAAM,sBAAsBJ,OAAO,CAACA,OAAO,EAAE,CAAC;MACtD;MACA,IAAIA,OAAO,CAACT,MAAM,EAAEY,GAAG,CAAC,GAAGC,MAAM,+BAA+B,CAAC;MACjE,IAAIJ,OAAO,CAACM,SAAS,EAAEH,GAAG,CAAC,GAAGC,MAAM,iCAAiC,CAAC;MACtE,IAAIJ,OAAO,CAACO,KAAK,EAAE;QAClBJ,GAAG,CAAC,GAAGC,MAAM,4BAA4BJ,OAAO,CAACO,KAAK,EAAE,CAAC;MAC1D;MACA,IAAIP,OAAO,CAACQ,QAAQ,EAAE;QACrBL,GAAG,CAAC,GAAGC,MAAM,+BAA+BJ,OAAO,CAACQ,QAAQ,EAAE,CAAC;MAChE;MACA,IAAIR,OAAO,CAACS,mBAAmB,EAAE;QAChCN,GAAG,CACF,GAAGC,MAAM,6BAA6BJ,OAAO,CAACS,mBAAmB,EAClE,CAAC;MACF;MACA,IAAIT,OAAO,CAACU,YAAY,EAAE;QACzBP,GAAG,CACF,GAAGC,MAAM,2CAA2CJ,OAAO,CAACU,YAAY,EACzE,CAAC;MACF;MACAR,QAAQ,CAAC,CAAC;IACX,CAAC,CAAC;EACJ;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}