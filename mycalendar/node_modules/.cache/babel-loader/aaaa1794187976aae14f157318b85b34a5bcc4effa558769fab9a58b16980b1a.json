{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dah03\\\\calendar\\\\mycalendar\\\\src\\\\components\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // allows clicking/selecting\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookingCalendar() {\n  _s();\n  const [events, setEvents] = useState([]);\n\n  // Load bookings on mount\n  useEffect(() => {\n    axios.get(\"/api/bookings\").then(res => {\n      const formatted = res.data.map(b => {\n        var _b$customer;\n        return {\n          id: b.id,\n          title: ((_b$customer = b.customer) === null || _b$customer === void 0 ? void 0 : _b$customer.display_name) || \"Booked\",\n          start: b.start_at,\n          end: b.end_at\n        };\n      });\n      setEvents(formatted);\n    });\n  }, []);\n\n  // Handle selecting a slot\n  const handleDateSelect = async selectInfo => {\n    const confirmBooking = window.confirm(`Book ${selectInfo.startStr} to ${selectInfo.endStr}?`);\n    if (!confirmBooking) return;\n    const booking = {\n      booking: {\n        start_at: selectInfo.startStr,\n        end_at: selectInfo.endStr,\n        customer_id: \"Test Customer\",\n        appointment_segments: [{\n          team_member_id: \"test1\",\n          service_variation_id: \"srv1\"\n        } // mock for now\n        ]\n      }\n    };\n    try {\n      var _res$data$customer;\n      const res = await axios.post(\"/api/bookings\", booking);\n      const newEvent = {\n        id: res.data.id,\n        title: ((_res$data$customer = res.data.customer) === null || _res$data$customer === void 0 ? void 0 : _res$data$customer.display_name) || \"Booked\",\n        start: res.data.start_at,\n        end: res.data.end_at\n      };\n      setEvents(prev => [...prev, newEvent]);\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        alert(\"That time slot is already booked.\");\n      } else {\n        console.error(\"Booking error:\", err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"timeGridWeek\",\n      selectable: true,\n      editable: false,\n      events: events,\n      select: handleDateSelect,\n      headerToolbar: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n      },\n      height: \"80vh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(BookingCalendar, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = BookingCalendar;\nvar _c;\n$RefreshReg$(_c, \"BookingCalendar\");","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","axios","jsxDEV","_jsxDEV","BookingCalendar","_s","events","setEvents","get","then","res","formatted","data","map","b","_b$customer","id","title","customer","display_name","start","start_at","end","end_at","handleDateSelect","selectInfo","confirmBooking","window","confirm","startStr","endStr","booking","customer_id","appointment_segments","team_member_id","service_variation_id","_res$data$customer","post","newEvent","prev","err","_err$response","response","status","alert","console","error","className","children","plugins","initialView","selectable","editable","select","headerToolbar","left","center","right","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dah03/calendar/mycalendar/src/components/Calendar.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; // allows clicking/selecting\r\nimport axios from \"axios\";\r\n\r\nexport default function BookingCalendar() {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  // Load bookings on mount\r\n  useEffect(() => {\r\n    axios.get(\"/api/bookings\").then((res) => {\r\n      const formatted = res.data.map((b) => ({\r\n        id: b.id,\r\n        title: b.customer?.display_name || \"Booked\",\r\n        start: b.start_at,\r\n        end: b.end_at,\r\n      }));\r\n      setEvents(formatted);\r\n    });\r\n  }, []);\r\n\r\n  // Handle selecting a slot\r\n  const handleDateSelect = async (selectInfo) => {\r\n    const confirmBooking = window.confirm(\r\n      `Book ${selectInfo.startStr} to ${selectInfo.endStr}?`\r\n    );\r\n    if (!confirmBooking) return;\r\n\r\n    const booking = {\r\n      booking: {\r\n        start_at: selectInfo.startStr,\r\n        end_at: selectInfo.endStr,\r\n        customer_id: \"Test Customer\",\r\n        appointment_segments: [\r\n          { team_member_id: \"test1\", service_variation_id: \"srv1\" }, // mock for now\r\n        ],\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/bookings\", booking);\r\n      const newEvent = {\r\n        id: res.data.id,\r\n        title: res.data.customer?.display_name || \"Booked\",\r\n        start: res.data.start_at,\r\n        end: res.data.end_at,\r\n      };\r\n      setEvents((prev) => [...prev, newEvent]);\r\n    } catch (err) {\r\n      if (err.response?.status === 409) {\r\n        alert(\"That time slot is already booked.\");\r\n      } else {\r\n        console.error(\"Booking error:\", err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n        initialView=\"timeGridWeek\"\r\n        selectable={true}\r\n        editable={false}\r\n        events={events}\r\n        select={handleDateSelect}\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n        }}\r\n        height=\"80vh\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}