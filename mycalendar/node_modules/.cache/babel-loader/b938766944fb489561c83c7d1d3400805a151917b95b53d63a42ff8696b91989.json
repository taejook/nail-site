{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n\n/**\n * @param {ResolveContext} options options for inner context\n * @param {null|string} message message to log\n * @returns {ResolveContext} inner context\n */\nmodule.exports = function createInnerContext(options, message) {\n  let messageReported = false;\n  let innerLog;\n  if (options.log) {\n    if (message) {\n      /**\n       * @param {string} msg message\n       */\n      innerLog = msg => {\n        if (!messageReported) {\n          /** @type {((str: string) => void)} */\n          options.log(message);\n          messageReported = true;\n        }\n\n        /** @type {((str: string) => void)} */\n        options.log(`  ${msg}`);\n      };\n    } else {\n      innerLog = options.log;\n    }\n  }\n  return {\n    log: innerLog,\n    yield: options.yield,\n    fileDependencies: options.fileDependencies,\n    contextDependencies: options.contextDependencies,\n    missingDependencies: options.missingDependencies,\n    stack: options.stack\n  };\n};","map":{"version":3,"names":["module","exports","createInnerContext","options","message","messageReported","innerLog","log","msg","yield","fileDependencies","contextDependencies","missingDependencies","stack"],"sources":["C:/Users/dah03/calendar/mycalendar/node_modules/enhanced-resolve/lib/createInnerContext.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n\n/**\n * @param {ResolveContext} options options for inner context\n * @param {null|string} message message to log\n * @returns {ResolveContext} inner context\n */\nmodule.exports = function createInnerContext(options, message) {\n\tlet messageReported = false;\n\tlet innerLog;\n\tif (options.log) {\n\t\tif (message) {\n\t\t\t/**\n\t\t\t * @param {string} msg message\n\t\t\t */\n\t\t\tinnerLog = (msg) => {\n\t\t\t\tif (!messageReported) {\n\t\t\t\t\t/** @type {((str: string) => void)} */\n\t\t\t\t\t(options.log)(message);\n\t\t\t\t\tmessageReported = true;\n\t\t\t\t}\n\n\t\t\t\t/** @type {((str: string) => void)} */\n\t\t\t\t(options.log)(`  ${msg}`);\n\t\t\t};\n\t\t} else {\n\t\t\tinnerLog = options.log;\n\t\t}\n\t}\n\n\treturn {\n\t\tlog: innerLog,\n\t\tyield: options.yield,\n\t\tfileDependencies: options.fileDependencies,\n\t\tcontextDependencies: options.contextDependencies,\n\t\tmissingDependencies: options.missingDependencies,\n\t\tstack: options.stack,\n\t};\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;;AAEA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,kBAAkBA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAC9D,IAAIC,eAAe,GAAG,KAAK;EAC3B,IAAIC,QAAQ;EACZ,IAAIH,OAAO,CAACI,GAAG,EAAE;IAChB,IAAIH,OAAO,EAAE;MACZ;AACH;AACA;MACGE,QAAQ,GAAIE,GAAG,IAAK;QACnB,IAAI,CAACH,eAAe,EAAE;UACrB;UACCF,OAAO,CAACI,GAAG,CAAEH,OAAO,CAAC;UACtBC,eAAe,GAAG,IAAI;QACvB;;QAEA;QACCF,OAAO,CAACI,GAAG,CAAE,KAAKC,GAAG,EAAE,CAAC;MAC1B,CAAC;IACF,CAAC,MAAM;MACNF,QAAQ,GAAGH,OAAO,CAACI,GAAG;IACvB;EACD;EAEA,OAAO;IACNA,GAAG,EAAED,QAAQ;IACbG,KAAK,EAAEN,OAAO,CAACM,KAAK;IACpBC,gBAAgB,EAAEP,OAAO,CAACO,gBAAgB;IAC1CC,mBAAmB,EAAER,OAAO,CAACQ,mBAAmB;IAChDC,mBAAmB,EAAET,OAAO,CAACS,mBAAmB;IAChDC,KAAK,EAAEV,OAAO,CAACU;EAChB,CAAC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}