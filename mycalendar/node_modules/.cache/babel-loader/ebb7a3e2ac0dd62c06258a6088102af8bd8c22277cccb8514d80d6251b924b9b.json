{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dah03\\\\calendar\\\\mycalendar\\\\src\\\\components\\\\App\\\\Calendar\\\\Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Calendar({\n  events = [],\n  setEvents = () => {},\n  locations = [],\n  teamMembers = [],\n  services = [],\n  setShowBookingForm = () => {},\n  setSelectedSlot = () => {}\n}) {\n  _s();\n  const [selectedTeamMember, setSelectedTeamMember] = useState(\"\");\n  const [sidebarDay, setSidebarDay] = useState(new Date());\n  const [availableSlots, setAvailableSlots] = useState([]);\n\n  // calculate available slots\n  useEffect(() => {\n    if (!selectedTeamMember) {\n      setAvailableSlots([]);\n      return;\n    }\n    const slots = [];\n    for (let hour = 9; hour < 17; hour++) {\n      const start = new Date(sidebarDay);\n      start.setHours(hour, 0, 0, 0);\n      const end = new Date(sidebarDay);\n      end.setHours(hour + 1, 0, 0, 0);\n      const conflict = events.some(e => e.team_member_id === selectedTeamMember && new Date(e.start) < end && new Date(e.end) > start);\n      if (!conflict) slots.push({\n        start,\n        end\n      });\n    }\n    setAvailableSlots(slots);\n  }, [events, sidebarDay, selectedTeamMember]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC5 Select Date & Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Staff:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTeamMember,\n            onChange: e => setSelectedTeamMember(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Staff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), teamMembers.map(tm => {\n              var _tm$team_member_detai;\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: tm.id,\n                children: ((_tm$team_member_detai = tm.team_member_details) === null || _tm$team_member_detai === void 0 ? void 0 : _tm$team_member_detai.given_name) || tm.id\n              }, tm.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini-calendar\",\n          children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n            plugins: [dayGridPlugin, interactionPlugin],\n            initialView: \"dayGridMonth\",\n            selectable: true,\n            select: info => setSidebarDay(new Date(info.startStr)),\n            headerToolbar: {\n              left: \"prev\",\n              center: \"title\",\n              right: \"next\"\n            },\n            height: \"auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slots\",\n          children: !selectedTeamMember ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"#888\",\n              fontStyle: \"italic\"\n            },\n            children: \"Please select a staff member to see available slots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this) : availableSlots.length ? availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"time-slot-btn\",\n            onClick: () => {\n              setSelectedSlot({\n                start: slot.start.toISOString(),\n                end: slot.end.toISOString()\n              });\n              setShowBookingForm(true);\n            },\n            children: [slot.start.toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\"\n            }), \" \", \"-\", \" \", slot.end.toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\"\n            })]\n          }, slot.start.toISOString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No available slots for this day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-right\",\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin, interactionPlugin],\n        initialView: \"dayGridMonth\",\n        events: events,\n        eventDisplay: \"block\",\n        selectable: true,\n        select: info => {\n          setSelectedSlot({\n            start: info.startStr,\n            end: info.endStr\n          });\n          setShowBookingForm(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"ha/TA6nO9XtvRyJ8wgqcAxj+PIo=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","Calendar","events","setEvents","locations","teamMembers","services","setShowBookingForm","setSelectedSlot","_s","selectedTeamMember","setSelectedTeamMember","sidebarDay","setSidebarDay","Date","availableSlots","setAvailableSlots","slots","hour","start","setHours","end","conflict","some","e","team_member_id","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","map","tm","_tm$team_member_detai","id","team_member_details","given_name","plugins","initialView","selectable","select","info","startStr","headerToolbar","left","center","right","height","style","color","fontStyle","length","slot","onClick","toISOString","toLocaleTimeString","minute","eventDisplay","endStr","_c","$RefreshReg$"],"sources":["C:/Users/dah03/calendar/mycalendar/src/components/App/Calendar/Calendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport \"./Calendar.css\";\r\n\r\nexport default function Calendar({\r\n  events = [],\r\n  setEvents = () => {},\r\n  locations = [],\r\n  teamMembers = [],\r\n  services = [],\r\n  setShowBookingForm = () => {},\r\n  setSelectedSlot = () => {},\r\n}) {\r\n  const [selectedTeamMember, setSelectedTeamMember] = useState(\"\");\r\n  const [sidebarDay, setSidebarDay] = useState(new Date());\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n\r\n  // calculate available slots\r\n  useEffect(() => {\r\n    if (!selectedTeamMember) {\r\n      setAvailableSlots([]);\r\n      return;\r\n    }\r\n\r\n    const slots = [];\r\n    for (let hour = 9; hour < 17; hour++) {\r\n      const start = new Date(sidebarDay);\r\n      start.setHours(hour, 0, 0, 0);\r\n      const end = new Date(sidebarDay);\r\n      end.setHours(hour + 1, 0, 0, 0);\r\n\r\n      const conflict = events.some(\r\n        (e) =>\r\n          e.team_member_id === selectedTeamMember &&\r\n          new Date(e.start) < end &&\r\n          new Date(e.end) > start\r\n      );\r\n\r\n      if (!conflict) slots.push({ start, end });\r\n    }\r\n    setAvailableSlots(slots);\r\n  }, [events, sidebarDay, selectedTeamMember]);\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      {/* Sidebar */}\r\n      <div className=\"calendar-left\">\r\n        <div className=\"calendar-sidebar\">\r\n          <h3>ðŸ“… Select Date & Time</h3>\r\n\r\n          {/* Staff Selector */}\r\n          <div className=\"form-group\">\r\n            <label>Staff:</label>\r\n            <select\r\n              value={selectedTeamMember}\r\n              onChange={(e) => setSelectedTeamMember(e.target.value)}\r\n            >\r\n              <option value=\"\">Select Staff</option>\r\n              {teamMembers.map((tm) => (\r\n                <option key={tm.id} value={tm.id}>\r\n                  {tm.team_member_details?.given_name || tm.id}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Mini calendar */}\r\n          <div className=\"mini-calendar\">\r\n            <FullCalendar\r\n              plugins={[dayGridPlugin, interactionPlugin]}\r\n              initialView=\"dayGridMonth\"\r\n              selectable={true}\r\n              select={(info) => setSidebarDay(new Date(info.startStr))}\r\n              headerToolbar={{\r\n                left: \"prev\",\r\n                center: \"title\",\r\n                right: \"next\",\r\n              }}\r\n              height=\"auto\"\r\n            />\r\n          </div>\r\n\r\n          {/* Time slots */}\r\n          <div className=\"time-slots\">\r\n            {!selectedTeamMember ? (\r\n              <p style={{ color: \"#888\", fontStyle: \"italic\" }}>\r\n                Please select a staff member to see available slots\r\n              </p>\r\n            ) : availableSlots.length ? (\r\n              availableSlots.map((slot) => (\r\n                <button\r\n                  key={slot.start.toISOString()}\r\n                  className=\"time-slot-btn\"\r\n                  onClick={() => {\r\n                    setSelectedSlot({\r\n                      start: slot.start.toISOString(),\r\n                      end: slot.end.toISOString(),\r\n                    });\r\n                    setShowBookingForm(true);\r\n                  }}\r\n                >\r\n                  {slot.start.toLocaleTimeString([], {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                  })}{\" \"}\r\n                  -{\" \"}\r\n                  {slot.end.toLocaleTimeString([], {\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                  })}\r\n                </button>\r\n              ))\r\n            ) : (\r\n              <p>No available slots for this day</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main calendar */}\r\n      <div className=\"calendar-right\">\r\n        <FullCalendar\r\n          plugins={[dayGridPlugin, interactionPlugin]}\r\n          initialView=\"dayGridMonth\"\r\n          events={events}\r\n          eventDisplay=\"block\"\r\n          selectable={true}\r\n          select={(info) => {\r\n            setSelectedSlot({ start: info.startStr, end: info.endStr });\r\n            setShowBookingForm(true);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}